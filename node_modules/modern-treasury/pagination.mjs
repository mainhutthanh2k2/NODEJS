// File generated from our OpenAPI spec by Stainless.
import { AbstractPage, coerceInteger } from './core.mjs';
export class Page extends AbstractPage {
  constructor(client, response, options) {
    super(client, response, options);
    this.items = response || [];
    this.per_page = coerceInteger(response.responseHeaders['x-per-page'] || null);
    this.after_cursor = response.responseHeaders['x-after-cursor'] || null;
  }
  getPaginatedItems() {
    return this.items;
  }
  // @deprecated Please use `nextPageInfo()` instead
  nextPageParams() {
    const info = this.nextPageInfo();
    if (!info) return null;
    if ('params' in info) return info.params;
    const params = Object.fromEntries(info.url.searchParams);
    if (!Object.keys(params).length) return null;
    return params;
  }
  nextPageInfo() {
    if (!this.after_cursor) return null;
    return { params: { after_cursor: this.after_cursor } };
  }
}
//# sourceMappingURL=pagination.mjs.map
