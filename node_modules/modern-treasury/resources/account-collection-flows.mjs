// File generated from our OpenAPI spec by Stainless.
import { APIResource } from 'modern-treasury/resource';
import { isRequestOptions } from 'modern-treasury/core';
import { Page } from 'modern-treasury/pagination';
export class AccountCollectionFlows extends APIResource {
  /**
   * create account_collection_flow
   */
  create(params, options) {
    const { 'Idempotency-Key': idempotencyKey, ...body } = params;
    return this.post('/api/account_collection_flows', {
      body,
      ...options,
      headers: {
        'Idempotency-Key': idempotencyKey || '',
        ...(options === null || options === void 0 ? void 0 : options.headers),
      },
    });
  }
  retrieve(id, query = {}, options) {
    if (isRequestOptions(query)) {
      return this.retrieve(id, {}, query);
    }
    const { 'Idempotency-Key': idempotencyKey } = query;
    return this.get(`/api/account_collection_flows/${id}`, {
      ...options,
      headers: {
        'Idempotency-Key': idempotencyKey || '',
        ...(options === null || options === void 0 ? void 0 : options.headers),
      },
    });
  }
  /**
   * update account_collection_flow
   */
  update(id, params, options) {
    const { 'Idempotency-Key': idempotencyKey, ...body } = params;
    return this.patch(`/api/account_collection_flows/${id}`, {
      body,
      ...options,
      headers: {
        'Idempotency-Key': idempotencyKey || '',
        ...(options === null || options === void 0 ? void 0 : options.headers),
      },
    });
  }
  list(query = {}, options) {
    if (isRequestOptions(query)) {
      return this.list({}, query);
    }
    return this.getAPIList('/api/account_collection_flows', AccountCollectionFlowsPage, {
      query,
      ...options,
    });
  }
}
export class AccountCollectionFlowsPage extends Page {}
(function (AccountCollectionFlows) {})(AccountCollectionFlows || (AccountCollectionFlows = {}));
//# sourceMappingURL=account-collection-flows.mjs.map
