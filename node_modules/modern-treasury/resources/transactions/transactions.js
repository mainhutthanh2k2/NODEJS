'use strict';
// File generated from our OpenAPI spec by Stainless.
var __createBinding =
  (this && this.__createBinding) ||
  (Object.create ?
    function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ('get' in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          },
        };
      }
      Object.defineProperty(o, k2, desc);
    }
  : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
var __setModuleDefault =
  (this && this.__setModuleDefault) ||
  (Object.create ?
    function (o, v) {
      Object.defineProperty(o, 'default', { enumerable: true, value: v });
    }
  : function (o, v) {
      o['default'] = v;
    });
var __importStar =
  (this && this.__importStar) ||
  function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null)
      for (var k in mod)
        if (k !== 'default' && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
  };
Object.defineProperty(exports, '__esModule', { value: true });
exports.TransactionsPage = exports.Transactions = void 0;
const resource_1 = require('modern-treasury/resource');
const core_1 = require('modern-treasury/core');
const line_items_1 = require('./line-items.js');
const API = __importStar(require('./index.js'));
const pagination_1 = require('modern-treasury/pagination');
class Transactions extends resource_1.APIResource {
  constructor() {
    super(...arguments);
    this.lineItems = new line_items_1.LineItems(this.client);
  }
  /**
   * Get details on a single transaction.
   */
  retrieve(id, options) {
    return this.get(`/api/transactions/${id}`, options);
  }
  update(id, body = {}, options) {
    if ((0, core_1.isRequestOptions)(body)) {
      return this.update(id, {}, body);
    }
    return this.patch(`/api/transactions/${id}`, { body, ...options });
  }
  list(query = {}, options) {
    if ((0, core_1.isRequestOptions)(query)) {
      return this.list({}, query);
    }
    return this.getAPIList('/api/transactions', TransactionsPage, { query, ...options });
  }
}
exports.Transactions = Transactions;
class TransactionsPage extends pagination_1.Page {}
exports.TransactionsPage = TransactionsPage;
(function (Transactions) {
  Transactions.LineItems = API.LineItems;
  Transactions.TransactionLineItemsPage = API.TransactionLineItemsPage;
})((Transactions = exports.Transactions || (exports.Transactions = {})));
//# sourceMappingURL=transactions.js.map
