// File generated from our OpenAPI spec by Stainless.
import { APIResource } from 'modern-treasury/resource';
import { isRequestOptions } from 'modern-treasury/core';
import { Page } from 'modern-treasury/pagination';
export class Counterparties extends APIResource {
  /**
   * Create a new counterparty.
   */
  create(params, options) {
    const { 'Idempotency-Key': idempotencyKey, ...body } = params;
    return this.post('/api/counterparties', {
      body,
      ...options,
      headers: {
        'Idempotency-Key': idempotencyKey || '',
        ...(options === null || options === void 0 ? void 0 : options.headers),
      },
    });
  }
  /**
   * Get details on a single counterparty.
   */
  retrieve(id, options) {
    return this.get(`/api/counterparties/${id}`, options);
  }
  update(id, body = {}, options) {
    if (isRequestOptions(body)) {
      return this.update(id, {}, body);
    }
    return this.patch(`/api/counterparties/${id}`, { body, ...options });
  }
  list(query = {}, options) {
    if (isRequestOptions(query)) {
      return this.list({}, query);
    }
    return this.getAPIList('/api/counterparties', CounterpartiesPage, { query, ...options });
  }
  /**
   * Deletes a given counterparty.
   */
  del(id, options) {
    return this.delete(`/api/counterparties/${id}`, {
      ...options,
      headers: { Accept: '', ...(options === null || options === void 0 ? void 0 : options.headers) },
    });
  }
  /**
   * Send an email requesting account details.
   */
  collectAccount(id, params, options) {
    const { 'Idempotency-Key': idempotencyKey, ...body } = params;
    return this.post(`/api/counterparties/${id}/collect_account`, {
      body,
      ...options,
      headers: {
        'Idempotency-Key': idempotencyKey || '',
        ...(options === null || options === void 0 ? void 0 : options.headers),
      },
    });
  }
}
export class CounterpartiesPage extends Page {}
(function (Counterparties) {})(Counterparties || (Counterparties = {}));
//# sourceMappingURL=counterparties.mjs.map
