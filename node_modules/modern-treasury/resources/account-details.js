'use strict';
// File generated from our OpenAPI spec by Stainless.
Object.defineProperty(exports, '__esModule', { value: true });
exports.AccountDetailsPage = exports.AccountDetails = void 0;
const resource_1 = require('modern-treasury/resource');
const core_1 = require('modern-treasury/core');
const pagination_1 = require('modern-treasury/pagination');
class AccountDetails extends resource_1.APIResource {
  /**
   * Create an account detail for an external account.
   */
  create(accountsType, accountId, params, options) {
    const { 'Idempotency-Key': idempotencyKey, ...body } = params;
    return this.post(`/api/${accountsType}/${accountId}/account_details`, {
      body,
      ...options,
      headers: {
        'Idempotency-Key': idempotencyKey || '',
        ...(options === null || options === void 0 ? void 0 : options.headers),
      },
    });
  }
  /**
   * Get a single account detail for a single internal or external account.
   */
  retrieve(accountsType, accountId, id, options) {
    return this.get(`/api/${accountsType}/${accountId}/account_details/${id}`, options);
  }
  list(accountsType, accountId, query = {}, options) {
    if ((0, core_1.isRequestOptions)(query)) {
      return this.list(accountsType, accountId, {}, query);
    }
    return this.getAPIList(`/api/${accountsType}/${accountId}/account_details`, AccountDetailsPage, {
      query,
      ...options,
    });
  }
  /**
   * Delete a single account detail for an external account.
   */
  del(accountsType, accountId, id, options) {
    return this.delete(`/api/${accountsType}/${accountId}/account_details/${id}`, {
      ...options,
      headers: { Accept: '', ...(options === null || options === void 0 ? void 0 : options.headers) },
    });
  }
}
exports.AccountDetails = AccountDetails;
class AccountDetailsPage extends pagination_1.Page {}
exports.AccountDetailsPage = AccountDetailsPage;
(function (AccountDetails) {})((AccountDetails = exports.AccountDetails || (exports.AccountDetails = {})));
//# sourceMappingURL=account-details.js.map
