'use strict';
// File generated from our OpenAPI spec by Stainless.
Object.defineProperty(exports, '__esModule', { value: true });
exports.CounterpartiesPage = exports.Counterparties = void 0;
const resource_1 = require('modern-treasury/resource');
const core_1 = require('modern-treasury/core');
const pagination_1 = require('modern-treasury/pagination');
class Counterparties extends resource_1.APIResource {
  /**
   * Create a new counterparty.
   */
  create(params, options) {
    const { 'Idempotency-Key': idempotencyKey, ...body } = params;
    return this.post('/api/counterparties', {
      body,
      ...options,
      headers: {
        'Idempotency-Key': idempotencyKey || '',
        ...(options === null || options === void 0 ? void 0 : options.headers),
      },
    });
  }
  /**
   * Get details on a single counterparty.
   */
  retrieve(id, options) {
    return this.get(`/api/counterparties/${id}`, options);
  }
  update(id, body = {}, options) {
    if ((0, core_1.isRequestOptions)(body)) {
      return this.update(id, {}, body);
    }
    return this.patch(`/api/counterparties/${id}`, { body, ...options });
  }
  list(query = {}, options) {
    if ((0, core_1.isRequestOptions)(query)) {
      return this.list({}, query);
    }
    return this.getAPIList('/api/counterparties', CounterpartiesPage, { query, ...options });
  }
  /**
   * Deletes a given counterparty.
   */
  del(id, options) {
    return this.delete(`/api/counterparties/${id}`, {
      ...options,
      headers: { Accept: '', ...(options === null || options === void 0 ? void 0 : options.headers) },
    });
  }
  /**
   * Send an email requesting account details.
   */
  collectAccount(id, params, options) {
    const { 'Idempotency-Key': idempotencyKey, ...body } = params;
    return this.post(`/api/counterparties/${id}/collect_account`, {
      body,
      ...options,
      headers: {
        'Idempotency-Key': idempotencyKey || '',
        ...(options === null || options === void 0 ? void 0 : options.headers),
      },
    });
  }
}
exports.Counterparties = Counterparties;
class CounterpartiesPage extends pagination_1.Page {}
exports.CounterpartiesPage = CounterpartiesPage;
(function (Counterparties) {})((Counterparties = exports.Counterparties || (exports.Counterparties = {})));
//# sourceMappingURL=counterparties.js.map
