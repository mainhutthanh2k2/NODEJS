import * as Core from 'modern-treasury/core';
import { APIResource } from 'modern-treasury/resource';
import * as API from './index.js';
import { Page, PageParams } from 'modern-treasury/pagination';
export declare class Connections extends APIResource {
  /**
   * Get a list of all connections.
   */
  list(query?: ConnectionListParams, options?: Core.RequestOptions): Core.PagePromise<ConnectionsPage>;
  list(options?: Core.RequestOptions): Core.PagePromise<ConnectionsPage>;
}
export declare class ConnectionsPage extends Page<Connection> {}
type _ConnectionsPage = ConnectionsPage;
export interface Connection {
  id: string;
  created_at: string;
  discarded_at: string | null;
  /**
   * This field will be true if this object exists in the live environment or false
   * if it exists in the test environment.
   */
  live_mode: boolean;
  object: string;
  updated_at: string;
  /**
   * An identifier given to this connection by the bank.
   */
  vendor_customer_id: string | null;
  /**
   * Unique identifier for the bank or vendor.
   */
  vendor_id: string;
  /**
   * A human-friendly name for the bank or vendor.
   */
  vendor_name: string;
}
export interface ConnectionListParams extends PageParams {
  /**
   * A string code representing the vendor (i.e. bank).
   */
  entity?: string;
  /**
   * An identifier assigned by the vendor to your organization.
   */
  vendor_customer_id?: string;
}
export declare namespace Connections {
  export import Connection = API.Connection;
  type ConnectionsPage = _ConnectionsPage;
  export import ConnectionListParams = API.ConnectionListParams;
}
export {};
//# sourceMappingURL=connections.d.ts.map
